nameOverride: ""
fullnameOverride: ""
clusterName:

teleport-kube-agent:
  enabled: true
  proxyAddr: teleport.prd.moonswitch.io:443
  highAvailability:
    replicaCount: 3
    requireAntiAffinity: true
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
  roles: kube
  joinParams:
    method: "token"
    tokenName:
  extraLabels:
    clusterRole:
      "moonswitch.io/app": moonswitch-agent
    clusterRoleBinding:
      "moonswitch.io/app": moonswitch-agent
    role:
      "moonswitch.io/app": moonswitch-agent
    roleBinding:
      "moonswitch.io/app": moonswitch-agent
    config:
      "moonswitch.io/app": moonswitch-agent
    deployment:
      "moonswitch.io/app": moonswitch-agent
    pod:
      "moonswitch.io/app": moonswitch-agent
    podDisruptionBudget:
      "moonswitch.io/app": moonswitch-agent
    podSecurityPolicy:
      "moonswitch.io/app": moonswitch-agent
    secret:
      "moonswitch.io/app": moonswitch-agent
    serviceAccount:
      "moonswitch.io/app": moonswitch-agent

cloudflare-tunnel-remote:
  enabled: true

kube-prometheus-stack:
  enabled: true
  commonLabels:
    "moonswitch.io/app": moonswitch-agent

  alertmanager:
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 40Gi

  grafana:
    defaultDashboardsTimezone: browser
    persistence:
      enabled: true
    grafana.ini:
      auth:
        disable_login_form: true
      auth.basic:
        enabled: false
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Admin
        hide_version: true

  cleanPrometheusOperatorObjectNames: true

  prometheus:
    prometheusSpec:
      storageSpec:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 100Gi
      additionalScrapeConfigs:
        - job_name: kubecost
          honor_labels: true
          scrape_interval: 1m
          scrape_timeout: 60s
          metrics_path: /metrics
          scheme: http
          dns_sd_configs:
          - names:
            - moonswitch-agent-cost-analyzer
            type: 'A'
            port: 9003
        - job_name: kubecost-networking
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
          # These will need to be updated when we update the chart version past 1.106.x
            - source_labels: [__meta_kubernetes_pod_label_app]
              action: keep
              regex: moonswitch-agent-network-costs

  prometheus-node-exporter:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/compute-type
                operator: NotIn
                values:
                  - fargate

  additionalPrometheusRulesMap:
    kubecost:
      groups:
        - name: CPU
          rules:
            - expr: sum(rate(container_cpu_usage_seconds_total{container!=""}[5m]))
              record: cluster:cpu_usage:rate5m
            - expr: rate(container_cpu_usage_seconds_total{container!=""}[5m])
              record: cluster:cpu_usage_nosum:rate5m
            - expr: avg(irate(container_cpu_usage_seconds_total{container!="POD", container!=""}[5m])) by (container,pod,namespace)
              record: kubecost_container_cpu_usage_irate
            - expr: sum(container_memory_working_set_bytes{container!="POD",container!=""}) by (container,pod,namespace)
              record: kubecost_container_memory_working_set_bytes
            - expr: sum(container_memory_working_set_bytes{container!="POD",container!=""})
              record: kubecost_cluster_memory_working_set_bytes
        - name: Savings
          rules:
            - expr: sum(avg(kube_pod_owner{owner_kind!="DaemonSet"}) by (pod) * sum(container_cpu_allocation) by (pod))
              record: kubecost_savings_cpu_allocation
              labels:
                daemonset: "false"
            - expr: sum(avg(kube_pod_owner{owner_kind="DaemonSet"}) by (pod) * sum(container_cpu_allocation) by (pod)) / sum(kube_node_info)
              record: kubecost_savings_cpu_allocation
              labels:
                daemonset: "true"
            - expr: sum(avg(kube_pod_owner{owner_kind!="DaemonSet"}) by (pod) * sum(container_memory_allocation_bytes) by (pod))
              record: kubecost_savings_memory_allocation_bytes
              labels:
                daemonset: "false"
            - expr: sum(avg(kube_pod_owner{owner_kind="DaemonSet"}) by (pod) * sum(container_memory_allocation_bytes) by (pod)) / sum(kube_node_info)
              record: kubecost_savings_memory_allocation_bytes
              labels:
                daemonset: "true"

weave-gitops:
  enabled: true
  replicaCount: 1
  podLabels:
    "moonswitch.io/app": moonswitch-agent
  additionalArgs:
    - --insecure-no-authentication-user=gitops-dashboard-user

cost-analyzer:
  enabled: true
  global:
    prometheus:
      enabled: false
      fqdn: http://moonswitch-agent-kube-prom-prometheus:9090
    grafana:
      enabled: false
      proxy: false
    notifications:
      alertmanager:
        enabled: true
        fqdn: http://moonswitch-agent-kube-prom-alertmanager:9093
    additionalLabels:
      "moonswitch.io/app": moonswitch-agent
  kubecostFrontend:
    image: "public.ecr.aws/kubecost/frontend"
    resources:
      requests:
        cpu: "10m"
        memory: "55Mi"
      limits:
        cpu: "100m"
        memory: "256Mi"
    ipv6:
      enabled: false
  grafana:
    sidecar:
      dashboards:
        enabled: true
      datasources:
        enabled: false
  prometheus:
    nodeExporter:
      enabled: false
    serviceAccounts:
      nodeExporter:
        create: false
    kubeStateMetrics:
      enabled: false
    kube-state-metrics:
      disabled: true
  kubecostMetrics:
    emitKsmV1Metrics: false
    emitKsmV1MetricsOnly: true
    exporter:
      serviceMonitor:
        enabled: true
  kubecostModel:
    image: "public.ecr.aws/kubecost/cost-model"
    outOfClusterPromMetricsEnabled: false
    cloudCost:
      enabled: false
    warmCache: true
    warmSavingsCache: true
    resources:
      requests:
        cpu: "200m"
        memory: "55Mi"
      limits:
        cpu: "800m"
        memory: "256Mi"
  networkCosts:
    enabled: true
    image: "public.ecr.aws/kubecost/kubecost-network-costs:v0.17.2"
    config:
      services:
        amazon-web-services: true

nginx:
  enabled: true
  image:
    registry: public.ecr.aws
    repository: o2n4c0l9/nginx
    tag: 1.25.3
  staticSiteConfigmap: nginx-static-site
  service:
    type: ClusterIP
